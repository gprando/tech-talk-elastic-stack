input {
	file {
		path => "/csv/caso_full.csv"
		start_position => "beginning"
		# delimiter => "\t"
		# discover_interval => 5
		# close_older => 60
		# mode => "tail"
		# file_sort_by => "path"
		# codec => multiline {
		# 	pattern => "^ETL Wrapper Initializing"
		# 	negate => true
		# 	what => previous
		# }
	}
}

filter {
	csv {
		#	autodetect_column_names => true
		# separator => ","
		# skip_header => "true"
		columns => ["city","city_ibge_code","date","epidemiological_week","estimated_population","estimated_population_2019","is_last","is_repeated","last_available_confirmed","last_available_confirmed_per_100k_inhabitants","last_available_date","last_available_death_rate","last_available_deaths","order_for_place","place_type","state","new_confirmed", "new_deaths"]
	}

	mutate {
		convert => {
			city_ibge_code => "integer"
			order_for_place => "integer"
			estimated_population_2019 => "integer"
			last_available_confirmed => "integer"
			last_available_deaths => "integer"
			new_deaths => "integer"
			new_confirmed => "integer"
		}
		remove_field => ["message","@timestamp","path","host","@version"]
	}
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "elastic"
		password => "changeme"
		index => "fullcases"
	}
	
	stdout {
		
	}
}
